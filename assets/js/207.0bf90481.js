(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{987:function(t,s,n){"use strict";n.r(s);var a=n(30),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("本次精读的文章是："),s("a",{attrs:{href:"https://juejin.cn/post/7025256331120476197",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eslint 的实现原理，其实挺简单 - 掘金"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"引言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),s("p",[t._v("团队一旦变大，往往有定制团队 lint 规范的诉求：一是知道如何配置规则，二是知道如何编写规则。")]),t._v(" "),s("p",[t._v("目前前端领域最流行的 lint 工具是 eslint ，我们只有了解了它的实现原理，才能更好的制定规范。")]),t._v(" "),s("p",[t._v("本次精读的文章，详细介绍了 ESLint 的实现原理。「ESLint 执行步骤」一节会对这篇文章进行总结，然后精读思考部分会重点探讨 ESLint 的解析细节和性能优化策略。")]),t._v(" "),s("h1",{attrs:{id:"eslint-执行步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint-执行步骤"}},[t._v("#")]),t._v(" ESLint 执行步骤")]),t._v(" "),s("p",[t._v("eslint 校验文件的过程主要分为如下几步：")]),t._v(" "),s("ol",[s("li",[t._v("读取配置")]),t._v(" "),s("li",[t._v("解析配置")]),t._v(" "),s("li",[t._v("预处理")]),t._v(" "),s("li",[t._v("解析文件")]),t._v(" "),s("li",[t._v("执行校验规则")]),t._v(" "),s("li",[t._v("提示错误")]),t._v(" "),s("li",[t._v("修复错误")])]),t._v(" "),s("h2",{attrs:{id:"_1-读取配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-读取配置"}},[t._v("#")]),t._v(" 1. "),s("strong",[t._v("读取配置")])]),t._v(" "),s("p",[t._v("收集当前项目下的 eslint 配置。基于"),s("strong",[t._v("约定大于配置")]),t._v("的原则，按照一定的优先级去寻找配置文件。如果有使用其他配置文件的需求，也可以在命令行工具中手动指定参数。")]),t._v(" "),s("blockquote"),t._v(" "),s("h2",{attrs:{id:"_2-解析配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-解析配置"}},[t._v("#")]),t._v(" 2. "),s("strong",[t._v("解析配置")])]),t._v(" "),s("blockquote",[s("p",[t._v("注：目前 eslint 已推出"),s("a",{attrs:{href:"https://eslint.org/docs/latest/use/configure/configuration-files-new",target:"_blank",rel:"noopener noreferrer"}},[t._v("新的配置系统"),s("OutboundLink")],1),t._v("，本文描述的还是传统那一套配置")])]),t._v(" "),s("p",[t._v("配置选项整体主要如下部分：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("解析器配置（parser）")]),t._v(" ：包含处理器和解析器，目标是将一个文件解析成 AST")]),t._v(" "),s("ol",[s("li",[s("blockquote",[s("p",[t._v("解析器用来将目标文件内容转换为 AST")]),t._v(" "),s("p",[t._v("处理器用来将解析器不可处理的文件转换为可解析的内容文本")]),t._v(" "),s("p",[t._v("比如利用处理器获取 md 文件中的 js 代码块，再交由解析器处理验证")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("环境配置（")]),t._v(" "),s("strong",[t._v("env")]),t._v(" "),s("strong",[t._v("）")]),t._v(" ：包含开箱即用的环境配置项 env（比如 node、jest、browser 等）以及手动指定的 globals 全局变量，目标是为全局变量提供定义，避免提示未定义变量报错")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("插件配置（plugins）")]),t._v(" ：定义一系列的校验规则，常以 "),s("code",[t._v("eslint-plugin-*")]),t._v(" 命名，在 ESLint 配置文件中通过 plugins 选项引入。需要注意的是，插件仅定义规则，并不启用规则。规则是由 ESLint 配置的 rules 选项启用的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("规则使用配置（rules）")]),t._v(" ：配置如何使用插件规则，包括是否开启、指定错误级别、配置规则所需参数")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("规则共享设置（")]),t._v(" "),s("strong",[t._v("settings")]),t._v(" "),s("strong",[t._v("）")]),t._v(" ：所有规则都可以拿到此配置项设置的参数")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("可共享配置（extends）")]),t._v(" ：每个 ESLint 配置文件都可以复用其他配置，被复用的这些配置被称为可共享配置。可共享配置一共有两种形式："),s("code",[t._v("eslint-config-*")]),t._v(" 这类的 "),s("code",[t._v("ESLint Config")]),t._v(" 以及 ESLint 插件带配置（"),s("code",[t._v("Plugins with configs")]),t._v("）")])])]),t._v(" "),s("h2",{attrs:{id:"_3-预处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-预处理"}},[t._v("#")]),t._v(" 3. 预处理")]),t._v(" "),s("p",[t._v("在解析文件之前，要先知道"),s("strong",[t._v("当前文件是否需要校验")]),t._v("，以及该文件"),s("strong",[t._v("应该选择怎样的解析器和处理器")]),t._v("。")]),t._v(" "),s("p",[t._v("一个文件是否需要校验，需要满足两个条件：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("未被指定为忽略")]),t._v("：包括 "),s("code",[t._v(".eslintignore")]),t._v(" 文件、配置文件的 "),s("code",[t._v("ignorePatterns")]),t._v(" 配置项、package.json 的 "),s("code",[t._v("eslintIgnore")]),t._v(" 配置项等等")]),t._v(" "),s("li",[s("strong",[t._v("有相应的解析器和处理器可以处理")]),t._v("：通过配置文件的 files 字段，可以指定其他配置项的文件作用范围，包含插件配置、解析相关配置等等。如果一个文件未被包含在 files 字段，则该文件不做处理。")])]),t._v(" "),s("blockquote",[s("p",[t._v("需要注意的是，由于存在继承机制，files 不一定需要在最外层配置配置，比如 "),s("code",[t._v("@typescript-eslint plugin/recomment")]),t._v(" 就默认配置了 files 为 "),s("code",[t._v("['*.ts', '*.tsx', '*.mts', '*.cts']")])])]),t._v(" "),s("p",[t._v("由于解析器只支持某种类型的文件，比如 ts 的解析器就只支持如上👆🏻 ts 相关文件，对于 Markdown 文件，"),s("strong",[t._v("想要验证其文件中的 ts 代码块，怎么办？")]),t._v(" 此时就需要引入处理器")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// .eslintrc.js\nmodule.exports = {\n  extends: "plugin:markdown/recommended"\n};\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("code",[t._v("plugin:markdown/recommended")]),t._v(" 里面就配置了 files、processor（处理器）、rules 等等内容")]),t._v(" "),s("p",[t._v("处理器最终将得到若干份子文件，并供解析器进一步处理")]),t._v(" "),s("h2",{attrs:{id:"_4-解析文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-解析文件"}},[t._v("#")]),t._v(" 4. "),s("strong",[t._v("解析文件")])]),t._v(" "),s("p",[t._v("使用解析器将目标文件解析成 AST ，比如 ts 文件使用 "),s("code",[t._v("@typescript-eslint/parser")]),t._v(" 解析器")]),t._v(" "),s("h2",{attrs:{id:"_5-执行校验规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-执行校验规则"}},[t._v("#")]),t._v(" 5. "),s("strong",[t._v("执行校验规则")])]),t._v(" "),s("p",[t._v("先对规则进行过滤，仅处理有开启校验的规则列表")]),t._v(" "),s("p",[t._v("整个校验是一个"),s("strong",[t._v("发布订阅")]),t._v("的过程：")]),t._v(" "),s("ol",[s("li",[t._v("每个规则会订阅 AST 节点")]),t._v(" "),s("li",[t._v("校验的时候会遍历 AST 树，遇到 AST 节点就发布对应的事件")]),t._v(" "),s("li",[t._v("规则收到 AST 节点事件后则执行校验逻辑，得到校验结果。如果校验失败，规则还可以返回修复手段逻辑。")]),t._v(" "),s("li",[t._v("AST 遍历完毕后，所有校验也就做完了。")])]),t._v(" "),s("h2",{attrs:{id:"_6-提示错误-修复错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-提示错误-修复错误"}},[t._v("#")]),t._v(" 6. "),s("strong",[t._v("提示错误&修复错误")])]),t._v(" "),s("p",[t._v("得到一个校验错误列表，此时需要对外提示错误。")]),t._v(" "),s("p",[t._v("在此之前还有一步过滤的过程，即页面中使用注释忽略了 eslint 错误，那么对应的校验错误结果也会过滤掉。")]),t._v(" "),s("p",[t._v("接着将结果对外展示，可能是基于 IDE 展示在编辑框上，可能是基于 cli 工具输出在终端上。")]),t._v(" "),s("p",[t._v("也提供修复错误的手段，简单来讲就是一个文本替换操作。")]),t._v(" "),s("h1",{attrs:{id:"精读思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精读思考"}},[t._v("#")]),t._v(" 精读思考")]),t._v(" "),s("p",[t._v("至此，我们已经熟悉了 eslint 的校验流程，接下来还有一些问题需要探讨。")]),t._v(" "),s("h2",{attrs:{id:"解析机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析机制"}},[t._v("#")]),t._v(" 解析机制")]),t._v(" "),s("h3",{attrs:{id:"不同解析器的-ast-格式是否一致"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同解析器的-ast-格式是否一致"}},[t._v("#")]),t._v(" 不同解析器的 AST 格式是否一致")]),t._v(" "),s("p",[t._v("比如社区上某些的 CSS 解析器，其得到的 AST ，能够直接供 ESLint 使用？")]),t._v(" "),s("p",[t._v("首先，AST 本身没有标准定义，不同解析器可以定制自己的 AST 节点规则，只要最后知道如何消费节点即可。")]),t._v(" "),s("p",[t._v("回到这个问题，社区的 CSS 解析器，"),s("strong",[t._v("并不一定能供 ESLint 使用")]),t._v("，除非继承了 ESLint 定义的 AST 节点规则。")]),t._v(" "),s("p",[t._v("具体可以看 ESLint 关于 AST 规范的定义 "),s("a",{attrs:{href:"https://eslint.org/docs/latest/extend/custom-parsers#ast-specification",target:"_blank",rel:"noopener noreferrer"}},[t._v("AST Specification"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("另外，搜了下社区并没有 CSS 相关的 "),s("code",[t._v("ESLint Parser")]),t._v(" ，猜测是 ESLint 提供的 AST 节点能力不够 CSS 使用，不如 Stylelint")]),t._v(" "),s("h3",{attrs:{id:"单文件能否应用多种解析器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单文件能否应用多种解析器"}},[t._v("#")]),t._v(" 单文件能否应用多种解析器")]),t._v(" "),s("p",[t._v("比如项目中有 Markdown 文件，我们想要校验 Markdown 的整体格式是否正确，同时还要校验 Markdown 里面 js 片段语法是否正确。")]),t._v(" "),s("p",[t._v("先说结论，这个是可行的，需要用到 2 个解析器")]),t._v(" "),s("ol",[s("li",[t._v("校验整体格式：使用 "),s("a",{attrs:{href:"https://github.com/leo-buneev/eslint-plugin-md",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-md"),s("OutboundLink")],1),t._v(" 插件")]),t._v(" "),s("li",[t._v("校验 JS 片段：使用 "),s("a",{attrs:{href:"https://github.com/eslint/eslint-plugin-markdown",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-markdown"),s("OutboundLink")],1),t._v(" 插件，里面带了 Markdown 的处理器来得到 js 片段")])]),t._v(" "),s("p",[t._v("示例配置：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:markdown/recommended'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin:md/recommended'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其中，这些共享配置具体是")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// plugin:md/recommended")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'md'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'md/remark'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'preset-lint-markdown-style-guide'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'frontmatter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("overrides")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("files")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.md'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parser")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'markdown-eslint-parser'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// plugin:markdown/recommended")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"markdown"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("overrides")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("files")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.md"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("processor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"markdown/markdown"')]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("files")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*.md/**"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parserOptions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ecmaFeatures")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Adding a "use strict" directive at the top of')]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// every code block is tedious and distracting, so")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// opt into strict mode parsing without the")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// directive.")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("impliedStrict")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The Markdown parser automatically trims trailing")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// newlines from code blocks.")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"eol-last"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In code snippets and examples, these rules are often")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// counterproductive to clarity and brevity.")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"no-undef"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"no-unused-expressions"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"no-unused-vars"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"padded-blocks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Adding a "use strict" directive at the top of every')]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// code block is tedious and distracting. The config")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// opts into strict mode parsing without the directive.")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("strict")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The processor will not receive a Unicode Byte Order")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Mark from the Markdown parser.")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"unicode-bom"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br")])]),s("h2",{attrs:{id:"eslint-性能优化策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint-性能优化策略"}},[t._v("#")]),t._v(" ESLint 性能优化策略")]),t._v(" "),s("h3",{attrs:{id:"内部执行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内部执行机制"}},[t._v("#")]),t._v(" 内部执行机制")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("按需执行校验规则")]),t._v("：没开启的规则不会执行，即使引入了 1w 个规则，但是仅启用了 1 个规则，也只会执行一次，这个 eslint 考虑到了")]),t._v(" "),s("li",[s("strong",[t._v("并行执行")]),t._v("：多线程执行校验。目前 eslint 没做")]),t._v(" "),s("li",[s("strong",[t._v("底层加速")]),t._v("：采用 rust 或 go 这类的语言加速执行。目前 eslint 没做，但计划在做了，见 "),s("a",{attrs:{href:"https://github.com/eslint/eslint/discussions/16557",target:"_blank",rel:"noopener noreferrer"}},[t._v("Complete rewrite of ESLint · eslint/eslint · Discussion #16557"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"ide-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ide-插件"}},[t._v("#")]),t._v(" IDE 插件")]),t._v(" "),s("p",[t._v("预期应该有的优化")]),t._v(" "),s("ul",[s("li",[t._v("降低频率：防抖")]),t._v(" "),s("li",[t._v("并行校验：使用多线程进行校验")]),t._v(" "),s("li",[t._v("预校验：在空闲时对其他文件进行校验")]),t._v(" "),s("li",[t._v("提升解析速度：文本比对")]),t._v(" "),s("li",[t._v("提升校验速度：复用上一次校验结果")])]),t._v(" "),s("p",[t._v("看了下 eslint vscode extension 的实现，上面的优化基本没做。")]),t._v(" "),s("p",[t._v("连防抖降频也都没做，目前每一次输入文本，都会跑一遍 ESLint 的校验逻辑。")]),t._v(" "),s("p",[t._v("从使用体验来看，eslint vscode extension 还有很大的优化空间。")]),t._v(" "),s("h3",{attrs:{id:"语法解析失败的健壮性处理策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法解析失败的健壮性处理策略"}},[t._v("#")]),t._v(" 语法解析失败的健壮性处理策略")]),t._v(" "),s("p",[t._v("预期是识别语法错误代码段，并对其他文本进行校验，譬如 vscode 的 ts 插件就能做到此效果")]),t._v(" "),s("p",[t._v("但目前来看 eslint 并没有这方面的能力，还有待优化。")]),t._v(" "),s("h3",{attrs:{id:"用户配置优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户配置优化"}},[t._v("#")]),t._v(" 用户配置优化")]),t._v(" "),s("p",[t._v("用户可以通过合理的配置，来提升 eslint 的校验速度。")]),t._v(" "),s("p",[t._v("我这边总结的有以下几点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("避免重复")]),t._v(" "),s("ol",[s("li",[t._v("尽量避免重复解析校验，比如一个 js 文件，用了 ts 校验，也用了 js 校验")]),t._v(" "),s("li",[t._v("尽量避免重复作用的规则，比如 eslint 的代码风格化规则，和 prettier 的冲突了，应该只用其中的一种规则")])])]),t._v(" "),s("li",[s("p",[t._v("按需校验：配置作用范围，仅目标文件需要校验，如 node_modules 的 js 文件就不需要校验。")])]),t._v(" "),s("li",[s("p",[t._v("...")])])]),t._v(" "),s("h1",{attrs:{id:"总结与展望"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结与展望"}},[t._v("#")]),t._v(" 总结与展望")]),t._v(" "),s("p",[t._v("ESLint 是目前前端社区最流行的 lint 工具，但是由于历史包袱，也存在着性能等诸多问题点。")]),t._v(" "),s("p",[t._v("新的 lint 工具如果想挑战它，除了性能这个差异点，可能还需要提供完善的生态。")]),t._v(" "),s("p",[t._v("目前社区已有一些基于 Rust 的 lint 工具，比如 "),s("a",{attrs:{href:"https://github.com/rslint/rslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("rslint"),s("OutboundLink")],1),t._v(" ，但还不太完善。")]),t._v(" "),s("p",[t._v("于此同时，ESLint 也有计划使用 Rust 进行重构，详见这个"),s("a",{attrs:{href:"https://github.com/eslint/eslint/discussions/16557",target:"_blank",rel:"noopener noreferrer"}},[t._v("讨论"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);