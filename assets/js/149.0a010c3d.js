(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{1032:function(e,t,a){"use strict";a.r(t);var r=a(30),v=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("以前回答别人浏览器中 Event loops 过程的问题时，只懂得说：")]),e._v(" "),t("ol",[t("li",[e._v("执行一次宏任务；")]),e._v(" "),t("li",[e._v("执行并清空微任务队列")]),e._v(" "),t("li",[e._v("回到1")])]),e._v(" "),t("p",[e._v("这样说也不算错，直到有一天有人问我， "),t("code",[e._v("UI Render")]),e._v(" 属于什么任务，执行时机是什么？这属实把我整蒙圈了，于是就有了本文")]),e._v(" "),t("p",[e._v("本文主要从以下几点入手")]),e._v(" "),t("ul",[t("li",[e._v("查找规范")]),e._v(" "),t("li",[e._v("背景知识")]),e._v(" "),t("li",[e._v("规范的内容和注意事项")]),e._v(" "),t("li",[e._v("Q&A")])]),e._v(" "),t("h2",{attrs:{id:"查找规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查找规范"}},[e._v("#")]),e._v(" 查找规范")]),e._v(" "),t("p",[e._v("ECMAScript 中没有定义 Event loops ，根据我的另外一篇文章 "),t("a",{attrs:{href:"./通读 HTML Standard.md"}},[e._v("通读 HTML Standard")]),e._v(" ，得知其定义在 "),t("RouterLink",{attrs:{to:"/01.大前端/01.前端基础/04.浏览器原理/渲染机制/(https://html.spec.whatwg.org/#event-loops)"}},[e._v("HTML 规范")]),e._v("中，由 WHATWG 维护")],1),e._v(" "),t("h2",{attrs:{id:"背景知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景知识"}},[e._v("#")]),e._v(" 背景知识")]),e._v(" "),t("h3",{attrs:{id:"javascript-engine-javascript-runtime-rendering-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-engine-javascript-runtime-rendering-engine"}},[e._v("#")]),e._v(" JavaScript Engine, JavaScript Runtime, Rendering Engine")]),e._v(" "),t("p",[e._v("先理清几个概念。")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("JavaScript 执行引擎("),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/JavaScript_engine",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript Engine"),t("OutboundLink")],1),e._v(")：将 js 脚本转换为可运行的机器代码指令，"),t("strong",[e._v("实现 ECMAScript 标准")]),e._v("。常见的执行引擎有 chrome 的 v8 ，Firefox 的 SpiderMonkey 等等。不限于在浏览器中使用，如 Node.js 的 JavaScript 执行引擎也是用的 v8 。")])]),e._v(" "),t("li",[t("p",[e._v("JavaScript 运行时环境(JavaScript Runtime)： 为 JavaScript 引擎的执行提供一个运行环境，包括解释编译，内存管理，事件循环，使用程序库（如 Web API）等等。JavaScript 引擎的实现完全独立于运行时环境，因此其可以运行于不同的环境，这些运行时环境由宿主程序提供，如浏览器，Node.js，所以有浏览器运行时环境、 Node.js 运行时环境等等。下面用一张图来展示浏览器运行时环境")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9277731-471a9f26730e58b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})])]),e._v(" "),t("li",[t("p",[e._v("渲染引擎(Rendering Engine)： 用于渲染网页内容，通过共享的 DOM 数据结构与 JavaScript 执行引擎协同工作。常见的有 chrome 的 Blink, Firefox 的 Gecko, Safari 的 WebKit 。渲染引擎还可用于除 Web 浏览器外的应用程序，如电子邮件客户端。")])]),e._v(" "),t("li",[t("p",[e._v("浏览器内核：倾向于只指渲染引擎。")])]),e._v(" "),t("li",[t("p",[e._v("浏览器：包括用户界面、渲染引擎、网络、数据存储、用户界面后端（如 alert）、浏览器引擎（传递用户指令给渲染引擎）、等。好像有点旧？")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9277731-5d22cf02cc1b0d4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})])])]),e._v(" "),t("p",[e._v("为什么有的浏览器支持新语法，有的不支持？因为它们的执行引擎不同，并且同种浏览器的不同版本用的执行引擎版本也就不同，比如新版的 chrome 能用 es 新语法而旧版不行")]),e._v(" "),t("p",[e._v("为什么不同浏览器渲染出来的页面样式可能不一样或者它们支持的 css 程度不一样？因为它们的渲染引擎不同")]),e._v(" "),t("p",[e._v("为什么 Node.js 上调用不了 DOM 的 API？因为该 API 由浏览器运行时环境提供，而 Node.js 运行时环境中没有该 API ，类似的也没有 localStorage 等 api")]),e._v(" "),t("p",[e._v("为什么不同浏览器支持的音视频编解码不一样？也是渲染引擎不同的原因。")]),e._v(" "),t("blockquote",[t("p",[e._v("chrome 的 video 标签会经 Blink 创建 WebMediaPlayer 实例，该 player 将 buffer 传给 FFmpeg 进行解码，然后将解码后数据丢给渲染器对象进行渲染，最后让 video 标签进行播放显示"),t("br"),e._v("\n参考自 "),t("a",{attrs:{href:"https://www.yinchengli.com/2018/07/08/chrome-media-stream/",target:"_blank",rel:"noopener noreferrer"}},[e._v("从Chrome源码看audio/video流媒体实现"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("浏览器运行时， html 规范， event loop")]),e._v(" "),t("h3",{attrs:{id:"调用栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调用栈"}},[e._v("#")]),e._v(" 调用栈")]),e._v(" "),t("p",[e._v("JavaScript 是单线程的，意味着它只有一个调用栈，同一时间只能执行一个任务。")]),e._v(" "),t("p",[e._v("调用栈也叫执行上下文栈（Execution Context Stack），当调用一个函数时就会产生一个新的执行上下文，并将该执行上下文入栈")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://camo.githubusercontent.com/5b52d8937591413cc2dc2f4d25526a061d9c7dc3/687474703a2f2f70302e7168696d672e636f6d2f743031653835386332363934333864363935612e6a7067",alt:""}})]),e._v(" "),t("p",[e._v("JavaScript 执行引擎只会一直执行栈顶的函数，它根本不知道什么是 microTask ， event loop 丢给它什么他就执行什么")]),e._v(" "),t("h2",{attrs:{id:"规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[e._v("#")]),e._v(" 规范")]),e._v(" "),t("p",[e._v("接下来，我们将对 Event loops 规范进行解读，本文的引用部分，均翻译自规范。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#event-loops",target:"_blank",rel:"noopener noreferrer"}},[e._v("规范原文地址"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("em",[e._v("题外话：")]),e._v(" 发现 whatwg 有个"),t("a",{attrs:{href:"https://whatwg-cn.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("中文站"),t("OutboundLink")],1),e._v(" ，前面的基础部分可以对照着看，其他的翻译不及时且较为生硬建议看原文")]),e._v(" "),t("h3",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[e._v("#")]),e._v(" 定义")]),e._v(" "),t("blockquote",[t("p",[e._v("为了协调事件，用户交互，脚本，渲染，联网等,用户代理必须使用本节所述的事件循环。每个代理都有一个关联的事件循环。")])]),e._v(" "),t("p",[e._v("该标准目前还没有定义何时创建或重用事件循环")]),e._v(" "),t("blockquote",[t("p",[e._v("窗口事件循环被用于相似源窗口代理,他们之间共享事件循环。")])]),e._v(" "),t("p",[e._v("相似源之间切换的处理，没有定义。。")]),e._v(" "),t("h3",{attrs:{id:"任务队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#任务队列"}},[e._v("#")]),e._v(" 任务队列")]),e._v(" "),t("h3",{attrs:{id:"处理模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理模型"}},[e._v("#")]),e._v(" 处理模型")]),e._v(" "),t("h3",{attrs:{id:"通用任务源-generic-task-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通用任务源-generic-task-sources"}},[e._v("#")]),e._v(" 通用任务源(Generic task sources)")]),e._v(" "),t("p",[e._v("由用户代理根据某种规则去选择一个 task queues ，从该 task queues 中取出队头 task")]),e._v(" "),t("p",[e._v("① The DOM manipulation task source")]),e._v(" "),t("p",[e._v("a/area标签的导航")]),e._v(" "),t("p",[e._v("history 部分操作")]),e._v(" "),t("p",[e._v("某些条件的iframe加载")]),e._v(" "),t("p",[e._v("img的启动和数据更新动画")]),e._v(" "),t("p",[e._v("BroadcastChannel")]),e._v(" "),t("h3",{attrs:{id:"微任务检查点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微任务检查点"}},[e._v("#")]),e._v(" 微任务检查点")]),e._v(" "),t("p",[e._v("多个地方，并不只是在任务结束后执行")]),e._v(" "),t("h3",{attrs:{id:"ui-render-阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ui-render-阶段"}},[e._v("#")]),e._v(" UI Render 阶段")]),e._v(" "),t("p",[e._v("rAF 在 ui render 阶段执行")]),e._v(" "),t("p",[e._v("但是 ui render 的执行时机是不可控的")]),e._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("每个 event loop 有多个任务队列，每轮 event loop 会根据某种规则去选择一个 task queues，从该 task queues 中取出队头 task 进行执行，而后执行 microTask queue ，再进行页面渲染")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/9277731-ba04dce7fd0153cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"q-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[e._v("#")]),e._v(" Q&A")]),e._v(" "),t("h3",{attrs:{id:"ie-的-event-loop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ie-的-event-loop"}},[e._v("#")]),e._v(" IE 的 event loop")]),e._v(" "),t("p",[e._v("ie 整个浏览器只有一个 event loop ，某个页面死循环了会导致其他页面也崩溃？")]),e._v(" "),t("h3",{attrs:{id:"示例1xxx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例1xxx"}},[e._v("#")]),e._v(" 示例1xxx")]),e._v(" "),t("p",[e._v("q:ssss")]),e._v(" "),t("p",[e._v("平时所说的触发回流是在哪进行的,getBoundingClientRect 触发的回流和 UI render 有什么关系么")]),e._v(" "),t("p",[e._v("a:xxx")]),e._v(" "),t("h3",{attrs:{id:"ui-rendering-属于-task-么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ui-rendering-属于-task-么"}},[e._v("#")]),e._v(" UI rendering 属于 task 么")]),e._v(" "),t("h3",{attrs:{id:"渲染是同步还是异步的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渲染是同步还是异步的"}},[e._v("#")]),e._v(" 渲染是同步还是异步的")]),e._v(" "),t("h3",{attrs:{id:"浏览器渲染时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染时机"}},[e._v("#")]),e._v(" 浏览器渲染时机")]),e._v(" "),t("p",[e._v("刷新频率， 规范没有规定策略，不同浏览数实现不同")]),e._v(" "),t("h3",{attrs:{id:"requestanimationframe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe"}},[e._v("#")]),e._v(" requestAnimationFrame")]),e._v(" "),t("p",[e._v("在下次重绘之前调用指定的回调函数更新动画")]),e._v(" "),t("p",[e._v("在 UI Render 阶段执行。但是具体在哪轮 event loop 后，由浏览器决定")]),e._v(" "),t("h2",{attrs:{id:"参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[e._v("#")]),e._v(" 参考文档")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#event-loops",target:"_blank",rel:"noopener noreferrer"}},[e._v("Event loops 规范"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/51275207",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web标准阅读入门之如何使用官网 - 人马座的文章 - 知乎"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aooy/blog/issues/5",target:"_blank",rel:"noopener noreferrer"}},[e._v("从event loop规范探究javaScript异步及浏览器更新渲染时机"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fi3ework/blog/issues/29",target:"_blank",rel:"noopener noreferrer"}},[e._v("跟着 Event loop 规范理解浏览器中的异步机制"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/lin_credible/article/details/40143961",target:"_blank",rel:"noopener noreferrer"}},[e._v("【朴灵评注】JavaScript 运行机制详解：再谈Event Loop"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=v.exports}}]);