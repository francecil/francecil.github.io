(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{1093:function(t,s,a){"use strict";a.r(s);var r=a(30),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"背景知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景知识"}},[t._v("#")]),t._v(" 背景知识")]),t._v(" "),s("h2",{attrs:{id:"stun"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stun"}},[t._v("#")]),t._v(" STUN")]),t._v(" "),s("p",[t._v("内网穿透")]),t._v(" "),s("h2",{attrs:{id:"turn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#turn"}},[t._v("#")]),t._v(" TURN")]),t._v(" "),s("p",[t._v("双端无法通信时用于转发数据")]),t._v(" "),s("h2",{attrs:{id:"ice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ice"}},[t._v("#")]),t._v(" ice")]),t._v(" "),s("p",[t._v("对 stun turn 做了封装，并有自己的一套协议")]),t._v(" "),s("h1",{attrs:{id:"建联过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建联过程"}},[t._v("#")]),t._v(" 建联过程")]),t._v(" "),s("h2",{attrs:{id:"创建-peerconnection-实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-peerconnection-实例"}},[t._v("#")]),t._v(" 创建 PeerConnection 实例")]),t._v(" "),s("p",[t._v("创建 pc 实例时，可以配置 iceServer 地址")]),t._v(" "),s("p",[t._v("pc 收到可用的 ice 候选后将该候选通过公网服务器发送给对端 pc 并进行添加")]),t._v(" "),s("p",[t._v("对端 pc 创建时执行一样的操作")]),t._v(" "),s("p",[t._v("这样双方会选择一个自己和对方都有的 ice 候选进行内网穿透")]),t._v(" "),s("h2",{attrs:{id:"session-描述传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session-描述传递"}},[t._v("#")]),t._v(" session 描述传递")]),t._v(" "),s("p",[t._v("仍然是添加到自身并通过公网服务发往对面，对面一样的操作")]),t._v(" "),s("p",[t._v("这个 session 描述主要是本地支持的音视频编解码格式")]),t._v(" "),s("h2",{attrs:{id:"添加音视频流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加音视频流"}},[t._v("#")]),t._v(" 添加音视频流")]),t._v(" "),s("p",[t._v("本地 pc 将音视频流添加到流通道中，在通道打通时对面就可以收到了")])])}),[],!1,null,null,null);s.default=e.exports}}]);