(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{986:function(t,e,r){"use strict";r.r(e);var n=r(30),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("View Transitions API 提供一种视图切换动效的新方式。")]),t._v(" "),e("p",[t._v("在之前，要想实现同一区域内容变化的淡入淡出效果，我们需要基于绝对定位同时渲染这两个组件，再完成渲染后再移除组件。")]),t._v(" "),e("p",[t._v("但是现在浏览器提供了新的 API ，可以做到移除旧内容的同时且保留视觉展示（底层采用截图实现），并在新内容到来后进行过渡变换。")]),t._v(" "),e("p",[t._v("相比原来绝对定位的方案，更加解耦，且性能更好。")]),t._v(" "),e("h2",{attrs:{id:"与-react-usetransition-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与-react-usetransition-的区别"}},[t._v("#")]),t._v(" 与 React useTransition 的区别")]),t._v(" "),e("blockquote",[e("p",[t._v("和 View Transitions API 完全不是一回事")])]),t._v(" "),e("p",[t._v("React 本质上操作的是状态，两个状态之间变换的同时让 React 更新可打断，避免长任务卡顿。")]),t._v(" "),e("h2",{attrs:{id:"未来发展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#未来发展"}},[t._v("#")]),t._v(" 未来发展")]),t._v(" "),e("p",[t._v("兼容性较差，chrome 111+ 支持")]),t._v(" "),e("p",[t._v("同时目前使用方式上还较为不便，期待后续更多框架的集成。")]),t._v(" "),e("h2",{attrs:{id:"拓展阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拓展阅读"}},[t._v("#")]),t._v(" 拓展阅读")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("View_Transitions_API MDN"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7270902621065412664",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器要原生实现React的并发更新了？"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7207810396420325413",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用全新的View Transitions API，实现B站PC客户端的深色主题切换效果"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);