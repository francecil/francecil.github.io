(window.webpackJsonp=window.webpackJsonp||[]).push([[302],{1086:function(s,t,e){"use strict";e.r(t);var a=e(30),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"手势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手势"}},[s._v("#")]),s._v(" 手势")]),s._v(" "),t("p",[s._v("注意保证 保证PC web端和APP端 的兼容性\nfiiser 通过wss传输 [x,y,isTouched]\nisTouched为监测鼠标移动/APP端触摸 是否按下\n研究了下其实不需要第三个参数，用js判断不传输就好了。")]),s._v(" "),t("h1",{attrs:{id:"音视频传输"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#音视频传输"}},[s._v("#")]),s._v(" 音视频传输")]),s._v(" "),t("p",[s._v("直接通过wss传输binary frame, 客户端这边再解码 渲染\n其中用到了Emscripten native2web的翻译，还用到了asm.js 主要翻译解码库(Decoder.min.js 第1335行)")]),s._v(" "),t("h2",{attrs:{id:"关于解码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于解码"}},[s._v("#")]),s._v(" 关于解码")]),s._v(" "),t("p",[s._v("H.264通过BroadwayJS解码(Decoder.min.js 第19655行)\n音频(这边我没找到它是怎么编码的) 数据利用base64解码(Decoder.min.js 第1127行)\n网上有人利用Speex.js进行编解码，再利用AudioContext渲染\n不过Speex.js我没用过..貌似还得编译，可以客户端编码为mp3orOgg 利用AudioContext自带的decode去解(硬解码)\n不过mp3的编码格式最近还在看")]),s._v(" "),t("h2",{attrs:{id:"关于渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于渲染"}},[s._v("#")]),s._v(" 关于渲染")]),s._v(" "),t("p",[s._v("音频上 由于 WebRTC 及 Web Audio API（AudioContext）不支持 IE 11，但是fiiser支持IE11\n所以fiiser不是利用以上两种解决方案，音频渲染貌似是利用https://github.com/googleads/videojs-ima这个引擎做的，\n貌似挺复杂，我们可以放弃IE 11 ，利用AudioContext来做\n视频渲染是利用上一步的BroadwayJS解码后直接交给Canvas和WebGL（参考Player.min.js")]),s._v(" "),t("h2",{attrs:{id:"关于同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于同步"}},[s._v("#")]),s._v(" 关于同步")]),s._v(" "),t("p",[s._v("wss每5s发送一个同步命令 让audio同步video ：fiiser的指令：4.sync,13.1469504534037;\n暂时不知道其含义")]),s._v(" "),t("h2",{attrs:{id:"关于性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于性能"}},[s._v("#")]),s._v(" 关于性能")]),s._v(" "),t("p",[s._v("由于利用了WebWorker（可以理解为后台进程）\nEmscripten 把C/C++开发的应用编译成JS 会进行js的优化，比本地js代码效率高2倍以上\n（参考 http://ejohn.org/blog/asmjs-javascript-compile-target/\n通过使用 use strict 和 use asm 来提高性能(简单来说就是让js写的严谨否则会报错)")])])}),[],!1,null,null,null);t.default=r.exports}}]);