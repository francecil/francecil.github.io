(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{982:function(t,s,e){"use strict";e.r(s);var a=e(30),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("本文介绍的 "),s("code",[t._v("document.write")]),t._v(" 重写方法，会放在文档头部执行，且不影响原先 "),s("code",[t._v("document.write")]),t._v(" 的执行时间点。内部执行不再采用 "),s("code",[t._v("document.write")])]),t._v(" "),s("h2",{attrs:{id:"document-write-的奇妙用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-write-的奇妙用法"}},[t._v("#")]),t._v(" document.write 的奇妙用法")]),t._v(" "),s("p",[t._v("html文档是边解释边执行的，所以 write 一部分时，会把这部分放入 html 解析器中。")]),t._v(" "),s("p",[t._v("若没有后续 write ，可能会把 js 代码断作为 html 节点内容的一部分")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<script>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有及时写入<\\/script>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面的代码会变成<script>代码中的一部分")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("这里我们假设用户的 "),s("code",[t._v("document.write")]),t._v(" 用法是正确的，即 write 了开标签，如果不 write 闭标签会出错的话 后面一定会write闭标签。")]),t._v(" "),s("p",[s("strong",[t._v("对于单个节点的write(无父节点等复杂情况)")]),t._v(",考虑以下几种情况")]),t._v(" "),s("ol",[s("li",[t._v("仅写入开标签，但必要的闭标签在下一个 "),s("code",[t._v("document.write")]),t._v(" 中")]),t._v(" "),s("li",[t._v("仅写入开标签，但闭标签非必要")]),t._v(" "),s("li",[t._v("存在script标签")]),t._v(" "),s("li",[t._v("写入标签未闭合，例："),s("code",[t._v("<di")]),t._v(" 暂未能判断是文本还是标签")])]),t._v(" "),s("h3",{attrs:{id:"仅写入开标签-但必要的闭标签在下一个-document-write-中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仅写入开标签-但必要的闭标签在下一个-document-write-中"}},[t._v("#")]),t._v(" 仅写入开标签，但必要的闭标签在下一个 "),s("code",[t._v("document.write")]),t._v(" 中")]),t._v(" "),s("p",[t._v("维护一个 需要必要闭标签的标签列表，第一个write写入了开标签，此时将其暂存，在第二个write的时候再补上 "),s("code",[t._v("str=leLabel+str")])]),t._v(" "),s("h3",{attrs:{id:"仅写入开标签-但闭标签非必要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仅写入开标签-但闭标签非必要"}},[t._v("#")]),t._v(" 仅写入开标签，但闭标签非必要")]),t._v(" "),s("p",[t._v("第一个write写入了开标签，但该标签不在"),s("code",[t._v("需要必要闭标签的标签列表")]),t._v("中,此时将其暂存，在第二个write的时候再补上 "),s("code",[t._v("str=leLabel+str")])]),t._v(" "),s("h3",{attrs:{id:"存在script标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存在script标签"}},[t._v("#")]),t._v(" 存在script标签")]),t._v(" "),s("p",[t._v("先写入script前的内容，然后append script 再继续处理script后的内容")]),t._v(" "),s("h3",{attrs:{id:"写入标签未闭合-例-di-暂未能判断是文本还是标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写入标签未闭合-例-di-暂未能判断是文本还是标签"}},[t._v("#")]),t._v(" 写入标签未闭合，例："),s("code",[t._v("<di")]),t._v(" 暂未能判断是文本还是标签")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<spa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("555")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"n>dsdas</span>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("将其当成标签，暂不写入内容，在下一次 "),s("code",[t._v("document.write")]),t._v(" 的时候，先判断上下文。")]),t._v(" "),s("p",[t._v("若处于不同 currentScript,说明上一未闭合标签是普通文本，需要补上文本")]),t._v(" "),s("p",[t._v("否则检测本次 write 的文本 是否以 "),s("code",[t._v("xx>")]),t._v(" 开头，且"),s("code",[t._v("(document.createElement(标签名)).__proto__ instanceof HTMLUnknownElement === false")]),t._v(" 则说明为标签，否则为普通文本")]),t._v(" "),s("p",[t._v("第三方库里面用的自定义元素，"),s("code",[t._v("(document.createElement(标签名)).__proto__ instanceof HTMLElement === true")])]),t._v(" "),s("h2",{attrs:{id:"拓展知识-未知元素与自定义元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拓展知识-未知元素与自定义元素"}},[t._v("#")]),t._v(" 拓展知识：未知元素与自定义元素")]),t._v(" "),s("ul",[s("li",[t._v("未知元素")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("<unknownelement>")])]),t._v(" "),s("p",[t._v("HTML规范中将没有定义的元素作为 HTMLUnknownElement 进行解析。")])]),t._v(" "),s("ul",[s("li",[t._v("自定义元素")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("<custom-element>")])]),t._v(" "),s("p",[t._v("自定义元素则并非如此。如果在创建时使用有效的名称（包含“-”），则潜在的自定义元素将解析为 HTMLElement 。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);