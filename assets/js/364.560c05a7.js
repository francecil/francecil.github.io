(window.webpackJsonp=window.webpackJsonp||[]).push([[364],{1151:function(s,a,t){"use strict";t.r(a);var n=t(30),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"q"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[s._v("#")]),s._v(" Q")]),s._v(" "),a("ol",[a("li",[s._v("control group 限制资源，使用场景")]),s._v(" "),a("li",[s._v("-d 参数 和 守护态 区别\n添加 -d 只是让容器启动后进入后台（比如还需要进入容器内部操作，若不使用-d的话ctrl+c就终止终端并终止容器，想象一下npm start）；\n一个docker容器运行需要指定一个前台进程，该进程终止了，该容器也就停止运行了。")]),s._v(" "),a("li",[s._v("容器内的网络和宿主机处于同一个网络\n同虚拟机一样，可以设置桥接等模式")]),s._v(" "),a("li",[s._v("EXPOSE 端口 其实是让容器会选择那个端口而已，不定义的话 会随机选择一个\nexpose 相当于 README, 告诉用户容器内进程使用的端口，不写的话也没关系，用户自己去找（好比我们npm start了一个项目 但是没有任何提示说 应用启动在哪个端口")]),s._v(" "),a("li",[s._v("做项目基础镜像（数据库镜像）需要注意的点，比如要打包os环境？\n需要基于os镜像（或者其更上层的封装镜像），多个项目基础镜像用的同个os镜像，不会占用内存")]),s._v(" "),a("li",[s._v("windows 用命令行进行配置：在 "),a("code",[s._v("C:\\Users\\{USER-NAME}\\.docker\\")]),s._v(" 目录下有各种配置文件")])]),s._v(" "),a("p",[s._v("前端项目本地开发，使用docker，如何避免每次 run dev 都要 npm install，过程略久")]),s._v(" "),a("p",[s._v("采用 -d 参数，又想查看输出")]),s._v(" "),a("p",[s._v("多个 docker-compose 服务，每个都会连接公共的容器？")]),s._v(" "),a("p",[s._v("进入容器查看配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -it container_id sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"防止容器自动退出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防止容器自动退出"}},[s._v("#")]),s._v(" 防止容器自动退出")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run xxx /bin/sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"while true; do echo hello world; sleep 1; done"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run xxx /bin/sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tail -f /dev/null"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"一条龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一条龙"}},[s._v("#")]),s._v(" 一条龙")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-dit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  /bin/sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tail -f /dev/null"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 展示容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);