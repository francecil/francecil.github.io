(window.webpackJsonp=window.webpackJsonp||[]).push([[302],{1195:function(t,a,s){"use strict";s.r(a);var v=s(30),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("在前端可视化可视化领域，对组件的伸缩、拖动、旋转操作是常有的功能")]),t._v(" "),a("p",[t._v("本文将以一个 div 作为组件讲述如何实现这些功能")]),t._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("组件采用div的方式，主要原因是开发快，方便定制，canvas或svg较难上手")]),t._v(" "),a("p",[t._v("而其他的控制按钮采用的是 canvas")]),t._v(" "),a("p",[t._v("大致结构如下：")]),t._v(" "),a("p",[t._v("控件的数据结构为")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  height\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"拖拽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拖拽"}},[t._v("#")]),t._v(" 拖拽")]),t._v(" "),a("p",[t._v("为何先讲拖拽，因为这个操作是独立的，不需要考虑其他两个操作")]),t._v(" "),a("h2",{attrs:{id:"旋转"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#旋转"}},[t._v("#")]),t._v(" 旋转")]),t._v(" "),a("p",[t._v("伸缩后面再讲，是因为计算坐标差的时候会受到旋转的影响")]),t._v(" "),a("p",[t._v("对组件设置"),a("code",[t._v("transform:rotate(30deg)")]),t._v("后，将按组件中点顺时针旋转30°")]),t._v(" "),a("p",[t._v("注意，不是按左上角坐标点旋转。")]),t._v(" "),a("p",[t._v("那么这个旋转角度要怎么计算呢？")]),t._v(" "),a("h2",{attrs:{id:"伸缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伸缩"}},[t._v("#")]),t._v(" 伸缩")]),t._v(" "),a("p",[t._v("已知当前旋转角度为 deg，对应的弧度为 "),a("code",[t._v("rad = deg * Math.PI/180")]),t._v(",\n对八个位置的伸缩处理如下")]),t._v(" "),a("ol",[a("li",[t._v("left位置，偏移量为 x (往左伸缩则x值<0,否则值>0))")])]),t._v(" "),a("blockquote",[a("p",[t._v("width 的值为 "),a("code",[t._v("width -= x';其中 x' = x * Math.cos(rad)")]),a("br"),t._v("\n同时由于中心点也要变更,"),a("br"),t._v("\nleft 的值为 "),a("code",[t._v("left += x' * Math.cos(rad)")]),t._v(" "),a("br"),t._v("\ntop 的值为 "),a("code",[t._v("top += x' * Math.sin(rad)")])])]),t._v(" "),a("ol",[a("li",[t._v("组件上下边中部的拉伸按钮，在垂直方向上移动的距离差为 y,")])]),t._v(" "),a("blockquote",[a("p",[t._v("则实际组件需要被拉伸的宽度应该为 "),a("code",[t._v("y'=y/(Math.cos(rad))")]),t._v("\n同时由于中心点也要变更，left变更量为"),a("code",[t._v("y'*Math.cos(rad)")]),t._v("，top变更量为"),a("code",[t._v("y'*Math.sin(rad)")])])]),t._v(" "),a("ol",[a("li",[t._v("组件左右边中部的拉伸按钮，在水平方向上移动的距离差为 x,")])]),t._v(" "),a("blockquote",[a("p",[t._v("则实际组件需要被拉伸的长度应该为 "),a("code",[t._v("x'=x*(Math.cos(rad)")])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("组件四周的拉伸按钮，在水平方向上移动的距离差为 x,在垂直方向上移动的距离差为 y,")])]),t._v(" "),a("blockquote",[a("p",[t._v("则实际组件需要被拉伸的宽度应该为 "),a("code",[t._v("y'=y/(Math.cos(rad)")]),t._v(",长度应该为 "),a("code",[t._v("x'=(y * Math.tan(rad)+x)*Math.cos(rad)")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);